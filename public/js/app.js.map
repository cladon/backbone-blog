{"version":3,"sources":["PostModel.js","SessionModel.js","UserModel.js","PostCollection.js","LoginView.js","PostEditView.js","PostListView.js","router.js","app.js","main.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACTA;AACA;AACA;AACA;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnDA;AACA","file":"app.js","sourcesContent":["var PostModel = Backbone.Model.extend({\r\n    urlRoot: 'posts'\r\n});\r\n","var SessionModel = Backbone.Model.extend({\r\n    defaults: {\r\n        logged_in: false,\r\n        user: null\r\n    },\r\n\r\n    initialize: function() {\r\n        _.bindAll(this);\r\n\r\n        this.user = new UserModel({});\r\n    },\r\n\r\n    url: '/auth/',\r\n\r\n    updateSessionUser: function(userData) {\r\n        this.user.set(_.pick(userData, _.keys(this.user.defaults)));\r\n    },\r\n\r\n    checkAuth: function(callback, args) {\r\n        var that = this;\r\n\r\n        $.ajax({\r\n            url: that.url + 'login',\r\n            type: 'GET',\r\n            dataType: 'json',\r\n\r\n            success: function(res) {\r\n\r\n            },\r\n\r\n            error: function() {\r\n\r\n            }\r\n        });\r\n    },\r\n\r\n    postAuth: function(method, data) {\r\n        var self = this;\r\n\r\n        $.ajax({\r\n            url: self.url + method,\r\n            contentType: 'application/json',\r\n            dataType: 'json',\r\n            type: 'POST',\r\n            data: JSON.stringify(data),\r\n            success: function(res) {\r\n                console.log(res);\r\n            }\r\n        });\r\n    }\r\n});\r\n","var UserModel = Backbone.Model.extend({\r\n\r\n    defaults: {\r\n        id: '',\r\n        username: '',\r\n        email: ''\r\n    }\r\n\r\n});\r\n","var PostCollection = Backbone.Collection.extend({\r\n    url: '/posts'\r\n});\r\n","var LoginView = Backbone.View.extend({\r\n    el: '#page',\r\n    render: function() {\r\n        var that = this;\r\n        that.$el.html(that.template());\r\n    },\r\n    template: function(objData) {\r\n        return _.template($(\"#post-list-template\"))(objData);\r\n    }\r\n});\r\n","var PostEditView = Backbone.View.extend({\r\n    el: '#page',\r\n\r\n    events: {\r\n        'submit #post-form': 'handleFormSubmit',\r\n        'click #cancel-form': 'cancelView'\r\n    },\r\n\r\n    cancelView: function(e) {\r\n        e.preventDefault();\r\n\r\n        $('.form-action-trigger').prop(\"disabled\", true);\r\n        Backbone.history.navigate('', true);\r\n    },\r\n\r\n    handleFormSubmit: function(e) {\r\n        e.preventDefault();\r\n        $('.form-action-trigger').prop(\"disabled\", true);\r\n        var post = new PostModel();\r\n        post.save(this.getFormData('post-form'), {\r\n            success: function(model) {\r\n                Backbone.App.showMessage('<p>The post has been created</p>', 'info');\r\n                Backbone.history.navigate('post/' + model.get('id'), true);\r\n            },\r\n\r\n            error: function(model, response) {\r\n                if (response.status == 401) {\r\n                    Backbone.App.showMessage('<p>You are not logged in.</p>', 'danger');\r\n                    Backbone.history.navigate('', true);\r\n                }\r\n            }\r\n        });\r\n    },\r\n\r\n    getFormData: function(id) {\r\n        var data = {};\r\n\r\n        var inputs = $(\"#\" + id).serializeArray();\r\n        $.each(inputs, function(i, input) {\r\n            data[input.name] = input.value;\r\n        });\r\n\r\n        return data;\r\n    },\r\n\r\n    render: function(id) {\r\n        var that = this;\r\n        if (id == undefined) {\r\n            that.$el.html(that.template());\r\n        } else {\r\n            var posts = new PostCollection();\r\n            var post = posts.get(id);\r\n\r\n            if (post == undefined) {\r\n                Backbone.history.navigate('', true);\r\n            } else {\r\n                that.$el.html(that.template(post));\r\n            }\r\n        }\r\n    },\r\n\r\n    template: function(data) {\r\n        return _.template($(\"#post-edit-template\").html())(data);\r\n    }\r\n});\r\n","var PostListView = Backbone.View.extend({\r\n    el: '#page',\r\n\r\n    render: function() {\r\n        var that = this;\r\n        var posts = new PostModel();\r\n        posts.fetch({\r\n            success: function(posts) {\r\n                that.$el.html(that.template({posts: posts.models}));\r\n            },\r\n            error: function() {\r\n                that.$el.html(that.template([]));\r\n            }\r\n        })\r\n    },\r\n    template: function(data) {\r\n        return _.template($(\"#post-list-template\").html())(data);\r\n    }\r\n});\r\n","var BlogRouter = Backbone.Router.extend({\r\n    routes: {\r\n        '': 'listPosts',\r\n        'post/new': 'editPost',\r\n        'post/:id': 'showPost',\r\n        'post/:id/edit': 'editPost',\r\n\r\n        'login': 'login'\r\n    },\r\n\r\n    authRoutes: ['editPost'],\r\n\r\n    views: {},\r\n\r\n    initialize: function() {\r\n         // this.handleRouteAuth();\r\n    },\r\n\r\n    handleRouteAuth: function() {\r\n        var that = this;\r\n        that.on(\"route\", function(route) {\r\n            console.log(route);\r\n            if (that.isProtected(route))\r\n                that.navigate('', true);\r\n        });\r\n    },\r\n\r\n    isProtected: function(route) {\r\n        for (var i = 0; i < this.authRoutes.length; i++)\r\n            if (this.authRoutes[i] == route)\r\n                return true;\r\n\r\n        return false;\r\n    },\r\n\r\n    listPosts: function() {\r\n        if (this.views.listPostView == undefined)\r\n            this.views.listPostView = new PostListView();\r\n\r\n        this.views.listPostView.render();\r\n    },\r\n\r\n    showPost: function() {\r\n        console.log(\"show post\");\r\n    },\r\n\r\n    editPost: function(id) {\r\n        if (this.views.editPostView == undefined)\r\n            this.views.editPostView = new PostEditView();\r\n\r\n        this.views.editPostView.render(id);\r\n    }\r\n});\r\n","var App = (function ($) {\r\n    function BlogApp() {\r\n        this.router = new BlogRouter();\r\n        this.session = null;\r\n\r\n        this.initialize();\r\n\r\n        Backbone.history.start();\r\n    }\r\n\r\n    BlogApp.prototype = {\r\n        apiRoot: '/api/v1/',\r\n\r\n        router: null,\r\n\r\n        session: null,\r\n\r\n        message: null,\r\n\r\n        initialize: function () {\r\n            var that = this;\r\n\r\n            $.ajaxSetup({cache: false});\r\n\r\n            $.ajaxPrefilter(function(options, originalOptions, jqXHR) {\r\n                options.url = that.apiRoot + options.url;\r\n\r\n                jqXHR.setRequestHeader('X-CSRF-TOKEN', $('meta[name=\"csrf\"]').attr('content'));\r\n            });\r\n\r\n            this.message = $(\"#alert-msg\");\r\n\r\n            Backbone.App = this;\r\n        },\r\n\r\n        showMessage: function(message, status) {\r\n            var that = this;\r\n            that.message.removeClass();\r\n\r\n            that.message.addClass('alert');\r\n            that.message.addClass('alert-' + status);\r\n            that.message.html(message);\r\n            that.message.show();\r\n\r\n            setTimeout(function() {\r\n                that.message.hide();\r\n            }, 10000)\r\n        }\r\n    };\r\n\r\n    return BlogApp;\r\n})(jQuery);","var app = new App();\r\n"],"sourceRoot":"/source/"}